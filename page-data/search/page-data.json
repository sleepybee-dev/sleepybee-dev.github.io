{"componentChunkName":"component---src-pages-search-jsx","path":"/search/","result":{"data":{"allMarkdownRemark":{"nodes":[{"excerpt":"기간 2022.12.17 ~ 2023.01.28 (7주) 팀 구성 개발자 4명, 디자이너 1명, 멘토 1명 왜 스터디에 들어갔나 본래 Flutter에 관심이 많았는데 우연히 GDG 인천 DevFest에서 Flutter 섹션이 있다는 걸 알게 됐다. 그런데 DevFest 3일 전에 코로나에 걸려 가지 못했다. 너무 아쉬웠다. 아무튼 이때 DevFest 때문…","fields":{"slug":"/230207fluttersongdo/"},"frontmatter":{"date":"February 07, 2023","title":"Flutter Songdo 스터디 회고","tags":["Diary","회고","Flutter"]},"rawMarkdownBody":"\n## 기간\n\n2022.12.17 ~ 2023.01.28 (7주)\n\n  \n## 팀 구성\n\n개발자 4명, 디자이너 1명, 멘토 1명\n\n  \n## 왜 스터디에 들어갔나\n\n본래 Flutter에 관심이 많았는데 우연히 GDG 인천 DevFest에서 Flutter 섹션이 있다는 걸 알게 됐다.\n\n그런데 DevFest 3일 전에 코로나에 걸려 가지 못했다. 너무 아쉬웠다.\n\n아무튼 이때 DevFest 때문에 GDG 인천/송도 오픈카톡방에 참여했는데 여기서 모집글을 보게 되었다.\n\n나같은 짭발자가 가서 창피나 당하는 게 아닐까 걱정했지만 도대체 다들 플러터를 어떤 구조로 짜고 클린아키텍쳐가 얼마나 가능한건지 알고 싶어서 지원했다.\n\n  \n## 아이디어 1등했다\n\n참가자 전원이 한 가지 아이디어를 필수로 제출해서 투표를 받기로 했다.\n\n당황스럽게도 아이디어 투표에서 1등을 했다.\n\n특별히 당황스러웠던 이유는 상당히 얌생이 같은 마음으로 가져간 아이디어였기 때문이다.\n\n<한국형 레지스트리>라는 이름의 아이디어인데 이미 해외에서 서비스되고 있는 레지스트리 앱 아이디어를 고대로 가져왔다. 이유는 1)기획하는 시간 줄이고 싶어서 2)UI디자인도 베끼고 디자인 품도 줄이고 싶어서 3)DB애셋이 필요없어서 였다.\n\n순전히 플러터 공부만 하고 싶기 때문에 짠 아이디어였는데 실서비스로도 좋을 것 같다는 피드백을 엄청 받았다. 난 전혀 그렇게 생각하지 않았어서 꽤나 당황했다.\n\n다른 분들은 마치 창업 스터디같이 사용자에게 필요할 것 같은, 세상에 없던 새로운 것을 고민해서 짜오셨다. 하지만 그러다보니 DB같은 부분이 구현이 어려워서 절대 만들 수 없겠다는 아이디어들도 많았다.\n\n개중 내가 제일 인상깊었던 건 집 날씨와 회사 날씨를 출근 시간에 알려주고 복장이나 우산 여부같은 것을 알려주는 앱이었다. 물론 멀티 날씨를 노출하는 앱들이 있긴 하지만 아예 그게 메인컨셉인 앱은 없어서 제일 쓰고 싶다고 생각했다. API문제만 없었으면 좋았으련만.\n\n재밌었던 점은 스터디에 참여한 현직자들은 오픈DB를 쓰는.. 거의 싱글페이지에 가까운 앱 아이디어를 가져왔다는 것이었다. 한국사문제은행 내려받고 노출하는 앱이라든가 문화재단 공연정보 내려받고 노출하는 앱이라든가 ㅋㅋㅋ 역시.. 짬바... 난 그런 아이디어들이 스터디 성격에 맞다고 생각해서 그런 앱들에 투표했다.\n\n  \n\n## 팀장이 됐다\n\n상위 4개의 아이디어로 4개의 팀을 꾸렸다.\n\n내 아이디어가 1등 했다는 건 팀장이 된다는 거였다.\n\n난 이 앱을 만들고 싶었기 때문에 이 앱을 만들 수 있다는 거에 기뻤지만 바로 아차 싶었다. 스터디 팀장이라는 것은 아무 권력이 없는, 일종의 집사(속되게 말하면, 시다바리)같은 거라 플러터 공부만 하고자 한 내 계획과 어긋나는 역할이었다.\n\n이래저래 당황스러움을 감추지 못하니 팀원 한 분이 \"너무 부담갖지 않으셔도 돼요\"라고 격려해주었다. 얼마나 없어보였으면... 하지만 내가 당황스러웠던 큰 이유는 우리 팀원들이 아무도 앱 개발 경력이 없다는 사실이었다.\n\n  \n\n## 하차의 위기\n\n내 기획은 나같은 허접도 2주면 만드는 기획이었다. 그런데 개발자가 4명이나 있다니 금방 해낼 줄 알았다. 빨리 만들고 오거나이저 분들께 아키텍쳐에 대한 피드백을 받아야 겠다고 계획을 세웠다.\n\n오산이었다.\n\n다들 Git도 처음이고 디버깅도 할 줄 몰라서 오류와 충돌의 연속이고 진도는 개미눈꼽만큼씩 진행됐다.\n\n나는 그 오류와 충돌을 바로잡는 것까지 하면서 혼자 개발할 때보다 3배는 힘들었다.\n\n힘든 것도 힘든 거지만 결정적으로...\n\n패턴을 적용하면 우리 팀원들이 내 코드를 읽지 못했다.\n\nBloc패턴이나 Provider를 조금씩 알려주면서 할까 하다가 주어진 기간 내에 끝낼 수 없고 팀원들이 그럴 수 있는 단계가 아니라고 판단하여 관뒀다.\n\n그래서 난 원래 쓰던 패턴도 못쓰고 아아주 일차원적인 코드를 써야 했다.\n\n퇴화된 내 코드를 보면서, 스터디하는 의미가 있을까, 시간낭비하는 건 아닐까 하는 회의감에 휩싸였다.\n\n  \n## 그래도 완성해보자\n\n사실 나는 첫 팀빌딩 때 20살의 무경력 아기병아리 분들이랑 팀이 됐길래 최소한의 개발 경험만 주고 나머지는 내가 해야겠다고 다짐했었다. 그래서 모든 주요 기능은 내가 개발하고 UI 구현만 분배해서 나누어 주었다.\n\n하지만 3주가 지나도 그만큼도 해내지 못했다. 자연스럽게 팀원을 원망했다. 꼰대같은 마음이 튀어나왔다.\n\n'내가 이렇게 배려해서 역할을 조금만 주는데도 왜 못 해내지? 나 때는 말이야..'\n\n나 때?\n\n난 스물다섯에 처음 앱 개발을 배웠고 당시 내 코드는 진짜 한심한 수준이었다.(지금도 그렇지만)\n\n그때 강사나 주변에 도움을 청할 수도 있었겠지만 난 그러지 않았다.\n\n왜냐면 창피하니까.\n\n난 코드 뿐만 아니라 마인드도 한심했다.\n\n그에 비해 우리 팀원들은 정말 멋진 사람들이었다. 처음이라 배워야 하는게 너무 많았는데 그걸 한번에 소화하려고 했고 멘토님이나 나한테 끊임없이 질문했다. 진도가 느린 건 안해서가 아니라 모든 게 처음이라 아둥바둥하고 있었기 때문이었다. 나는 그러지 못했다.\n\n옛날 내 모습과 겹쳐보면서 어린 팀원들을 응원하는 마음으로 스터디를 끝까지 하자고 마음을 굳혔다.\n\n스터디 기간에 연휴가 많아서 시간도 많지 않았는데 내 아이디어이다 보니 기획적인 부분도 도맡아서 고민하고 구현해야 했어서 힘들었다.\n  \n\n## 목표 달성?\n\n기간 내에 플레이스토어에 안드로이드 배포 완료하였다.\n\n앱스토어에도 올리는 게 목표였으나 그건 달성하지 못했다.\n\n팀의 목표는 90프로 정도 달성한 셈이다.\n\n나 개인 목표(아키텍쳐 공부)는 달성하지 못했다.\n\n  \n\n## 결과물\n<a href=\"/230127wewish/\">🎁위시리스트 공유하는 앱, 위위시wewish</a>\n\n  \n\n## 그래도 배운 게 많았다\n\n사실 첫 미팅 때 멘토님이 개발 단위를 늘리자고 하셨다. 아이디어를 좋게 봐주시고 욕심이 나셨던 것 같다. 난 극구 반대했다. 개발 경력, 디자인 경력이 나 외에 아무도 없었기 때문에 불안했다. 어찌저찌 개발 단위는 줄였다. 결과적으로는 내 생각이 맞았다. 내가 틀렸던 것은 그보다 더더더 줄였어야 한다는 거였다. 앞으로도 팀 프로젝트 할 때 더 보수적이어야 겠다고 배웠다..\n\n중간에 나는 여기서 무얼하고 있나 회의감에 빠졌을 무렵, 오거나이저 중 한 분이 Flutter 아키텍쳐 세션을 열어주셨다. 어떻게 Flutter로 클린아키텍쳐를 구현했는지를 한 시간 가량 보여주시면서 설명해 줬는데 이게 정말 도움이 됐다. 그 세션을 듣고 난 후에는 한결 기분이 좋아졌다. 덕분에 스터디하길 잘했다고 생각했다. 조만간 알려주신 구조를 시도해 볼 생각이다.\n\n\n## 후일담\n\n우리 팀은 단톡을 파지 않고 디스코드에 채널을 만들어 협업을 했는데 이 채널에 오거나이저 분들도 접속이 가능했다. 그러다보니 내가 어찌저찌 팀을 이끄는 모습을 보시고 여러 오거나이저 분들이 돌아가면서 \"열정적이시다\", \"팀장다운 팀장이다\" 등 한 마디 씩 격려의 말을 해주셨다. 칭찬이라기 보단 안쓰러워 보였던 것이리라.\n\n최종 발표를 마치고 자리로 갈 때 GDG 오거나이저에 관심없냐는 제안을 받았다. 나의 가엾은 팀 리딩이 인상 깊으셨던 것 같다. 좋게 봐주신 것 같아 정말 감사했는데 조금 당황해서 질색팔색하는 제스쳐를 해버렸다. 내가 거절한 건 제안이 싫어서라기보다 나 하나 건사하기 쉽지 않은 상황이기 때문이었다. 이 글을 빌어 제안 주셔서 영광이었다는 마음을 전하고 싶다.\n\n스터디가 끝났음에도, 우리 팀은 군대에 가게 된(ㅠㅠ) 디자이너 분을 제외하곤 전원이 팀에 남기로 하였다. 내가 조금 다그치기도 하고, 기획적으로 느슨해서 개발을 어렵게 만들기도 하고 그랬는데도 다들 팀에서 더 하고 싶다고 해주셔서 참 고마웠다. 해서 앞으로도 함께 앱을 발전시키면서 아키텍쳐 공부도 해보려고 한다.\n\n  ![](fluttersongdo.jpeg)\n"},{"excerpt":"Concept 위위시는 '한국형 레지스트리'를 표방하고 있습니다. 해외의 레지스트리 문화를 따와 위시리스트를 만들어 타인에게 공유할 수 있는 기능을 가지고 있습니다. Simple Scenario 위시 관리, 검색  타 앱에서 공유 기능으로 앱에서 위시리스트를 추가할 수 있습니다. 위시 공유 리스트를 공유할 수 있습니다. Firebase dynamic li…","fields":{"slug":"/230127wewish/"},"frontmatter":{"date":"January 27, 2023","title":"🎁위시리스트 공유하는 앱, 위위시wewish","tags":["Toy-Project","Flutter"]},"rawMarkdownBody":"[$card](https://play.google.com/store/apps/details?id=com.codeinsongdo.wewish)\n## Concept\n\n- **위위시**는 '한국형 레지스트리'를 표방하고 있습니다.\n\n- 해외의 레지스트리 문화를 따와 위시리스트를 만들어 타인에게 공유할 수 있는 기능을 가지고 있습니다.\n\n\n## Simple Scenario\n\n- 위시 관리, 검색\n\n**![](https://lh5.googleusercontent.com/MMvuRS0cdv09hDoZRGHpNxw0y9M41uMuHmybo29Dy6skQph7SXiT6q0cSGpOtvMRsDAYazxLhm2BWu5P1fBwzaeemvH3KTmjd__Q6nLp0VN7GlpIxjRQbMChA6RAMcZfqtDwJXYzmAEL8fWtrSJgrnRSBA=s2048)**\n\n타 앱에서 공유 기능으로 앱에서 위시리스트를 추가할 수 있습니다.\n\n\n- 위시 공유\n\n<img src=\"https://lh6.googleusercontent.com/QG08G6mIc-K-FBD5BUwpjl16YTLhX14ts5Wx0o57dEu1cXXkhNCyBzrUfgT2Kel4-gNYDtu24AtXLJgmAFxicA1DZsfHv6AAJcZ_m0MYsYbv3XI7kzGy1BFPxhozdFJ_i4KRK0lhNRkRoinYTFsslh5zXg=s2048\" width=\"300\" />\n\n리스트를 공유할 수 있습니다. Firebase dynamic link를 활용했습니다.\n\n\n## Dev Story\n  \n- INTP인 저는 개인 플레이가 좋아서 계속 미루다가 처음으로 사설 스터디에 참여해서 작업하였습니다. 이에 대한 회고록은 따로 작성했습니다. \n<a href=\"/230207fluttersongdo/\">Flutter Songdo 스터디 회고</a>\n\n- 아직 손 볼 게 너무 많습니다.\n\n- 먼 미래를 위해 카테고리에 쿠팡 코드를 심어서 많은 카테고리는 쿠팡 링크로 유도해서 용돈을 벌려고 했는데 그렇게까지 유저가 많아질 순 없을 것 같네요. 비슷한 앱들이 다 망해서.. 아마 카톡 찜 기능을 이기긴 힘들지 않았을까. 쿠팡 카테고리 코드를 뽑아내려고 애쓴 게 아쉬워서 주절주절 덧붙였습니다.\n\n\n## Release\n\n 최초 배포 - 2023.01.27\n"},{"excerpt":"기간 2022.11.07 ~ 2022.12.16 참여 계기 컴포즈가 핫해서? 새로운 게 공부하고 싶어서?\n물론 그런 것도 있지만 난 공부는 굳이 코드랩으로 하지 않는다.\n그럼에도 컴포즈 캠프에 참여한 건, 굿즈를 가지기 위해서다!!\n나와 같은 사람들 꽤나 많을 것이다. 처음 접한 Compose Flutter를 자주 쓰다보니 낯설지 않은 선언형 UI. mo…","fields":{"slug":"/221217compose/"},"frontmatter":{"date":"December 17, 2022","title":"Compose Camp 회고","tags":["Diary","회고","Android","Compose"]},"rawMarkdownBody":"\n## 기간\n\n2022.11.07 ~ 2022.12.16\n\n\n## 참여 계기\n\n컴포즈가 핫해서? 새로운 게 공부하고 싶어서?\n물론 그런 것도 있지만 난 공부는 굳이 코드랩으로 하지 않는다.\n그럼에도 컴포즈 캠프에 참여한 건,\n\n굿즈를 가지기 위해서다!!\n나와 같은 사람들 꽤나 많을 것이다.\n\n  \n\n## 처음 접한 Compose\n\nFlutter를 자주 쓰다보니 낯설지 않은 선언형 UI.\n\nmodifier의 순서가 중요한 부분이 상당히 낯설고 이상했지만 전체적으로 이해하기 어렵지 않았다.\n\n하지만 실무에서 Compose를 도입하려고 할 때 어차피 선언형 UI에 대한 러닝코스트를 가질 거라면 Flutter를 쓰는 게 비용적으로 좋지 않을까 싶다. 체감하기엔 상태관리 측면에서 Flutter보다 까다롭다.\n\n공식 문서 : <Compose를 사용해야 하는 이유>  \n\n[$card](https://developer.android.com/jetpack/compose/why-adopt?hl=ko)\n       \n## Github\n\nCompose Camp 진행한 내 깃헙 (folk 떠서 PR로 제출했다)\n\nhttps://github.com/sleepybee-dev/ComposeCamp2022\n  \n  \n\n## 수료 굿즈\n\n이제 본론으로 들어가서(?) 굿즈 공개.\n\n구성은, 나이키 리유저블 백 재질의 비닐스런 숄더백, 캠핑 컵, 뱃지 두 가지.\n\n다 너무 맘에 든다.\n\n  \n\n![Compose Camp 굿즈](compose01.jpeg)\n![](compose02.jpeg)\n![](compose03.jpeg)  \n\n저 가방을 들고 어딜 갈 수 있는가는 이제부터 고민해 봐야 한다. ㅋㅋㅋ"},{"excerpt":"기간 2022.10.27 ~ 2022.11.24 (4주) 부스트코스란 네이버 커넥트 재단에서 지원하는 무료 코칭 스터디다. 인강은 끈기있게 안 듣게 되는데 여기는 강사와 별개로 조별 코치가 있다. 실시간으로 질문을 받아주고 과제를 검토해서 피드백을 준다. 갑자기 웬 데이터사이언스? 방탈출 앱을 만들다보면 가공하고 싶은 데이터들이 많다. 평균 탈출시간, 인…","fields":{"slug":"/221125boostcorse/"},"frontmatter":{"date":"November 25, 2022","title":"데이터사이언스 부스트코스 회고","tags":["Diary","회고"]},"rawMarkdownBody":"### 기간\n\n2022.10.27 ~ 2022.11.24 (4주)\n\n  \n\n## 부스트코스란\n\n네이버 커넥트 재단에서 지원하는 무료 코칭 스터디다.\n\n인강은 끈기있게 안 듣게 되는데 여기는 강사와 별개로 조별 코치가 있다. 실시간으로 질문을 받아주고 과제를 검토해서 피드백을 준다.\n\n  \n\n## 갑자기 웬 데이터사이언스?\n\n방탈출 앱을 만들다보면 가공하고 싶은 데이터들이 많다. 평균 탈출시간, 인원, 지역 분포도 등등.. 그러다보니 기초적인 건 알아두면 좋겠다고 생각해서 강의도 사둔게 있다. 근데 안 듣는다. 아무래도 안드로이드 개발 강의가 우선이다보니 밀렸다. 그런데 코치도 있고 여럿이서 조를 짜서 하는 스터디성 강의에다가 무료이기 까지 하니 무조건 수료하게 되겠다 싶어 지원해버렸다.\n\n  \n\n## 리드부스터\n\n참가자를 부스터라고 부르는데 리드부스터로 지원했다. 역시나 나에게 끈기를 강제로 심어주기 위해서 리드부스터로 지원했다. 하는 일은 거의 팀 과제를 모아서 제출하는 거 밖엔 없었다.\n\n  \n\n## 배운 점\n\n사실 데이터사이언스에 대한 이론적인 걸 더 배우고 싶었는데 사실상 파이썬과 판다스로 데이터 시각화하는 연습을 하는 코스였다. 대부분 원할 때 구글링해서 익힐 수 있는 수준이었다. 그래도 안해봤으니, 그냥 해봤다, 라는 것에 만족한다. 그리고 같은 시각화 과제라도 팀마다 다른 식으로 짜서 제출하던데 그런 다각적인 접근을 볼 수 있었던 건 흥미로웠다.\n\n과제들은 구글 코랩으로 만들었는데 과제에 대한 저작권이 있어 블로그에 공개하면 안된다고 한다.\n\n  \n![](boostcorse.png)"},{"excerpt":"해당 포스트는 모각코 모임 발표 때 만들었던 마크다운 슬라이드를 아카이브한 것입니다. 제1회 재개발코딩 모각코 공부자랑 Shallow Dive To  OBSIDIAN https://obsidian.md  1. 노트툴에 대한 고민 에버노트     - 잔버그 때문에 잦은 업데이트     - 연동 기기 수 2개로 제한 (무료버전)     - 쉼없는 구독 권유 …","fields":{"slug":"/221014slide/"},"frontmatter":{"date":"October 14, 2022","title":"(슬라이드) Shallow Dive to Obsidian","tags":["Obsidian"]},"rawMarkdownBody":">해당 포스트는 모각코 모임 발표 때 만들었던 마크다운 슬라이드를 아카이브한 것입니다.\n\n제1회 재개발코딩 모각코 공부자랑\n\n## Shallow Dive To  OBSIDIAN\n\nhttps://obsidian.md\n\n![](obsidianlogo.png)\n\n  \n\n---\n\n## 1. 노트툴에 대한 고민\n\n1. 에버노트\n\n    - 잔버그 때문에 잦은 업데이트\n\n    - 연동 기기 수 2개로 제한 (무료버전)\n\n    - 쉼없는 구독 권유\n\n    - 마크다운을 쓰려면 별도의 플러그인 필요\n\n2. 노션\n\n    - 불편한 블록\n\n    - 잡다한 기능 때문에 모바일에서 매우 불편\n\n    - 불완전한 마크다운\n  \n---\n\n## 😘 옵시디언하자!\n\n- 무료\n\n- 데스크탑 클라이언트, 모바일 앱 모두 지원\n\n- 파일 로컬관리로 클라우드를 통한 무제한 싱크 가능 (공식 지원: iCloud, OneDrive)\n\n- 마크다운 완벽 지원\n\n- 태그, 아웃링크, 백링크\n\n- 강력한 플러그인들, 툴이 오픈소스라 계속 개발되는 중.\n\n  \n\n---\n\n## 2. 블로그에 대한 고민\n\n- 디자인 자유도가 너무 높은 Github 블로그, 자유도가 너무 낮은 velog.\n\n- Github 블로그, 티스토리, velog 등은 노트툴과 별개의 툴로 운영해야 함.\n\n- 노션은 노트와 블로그를 함께 할 수 있으나 퍼블리싱해주는 oopy가 유료다.(월 3900원) 또한 목록을 페이지 안에서 새로 짜야 한다.\n\n  \n\n---\n\n## 😘 옵시디언으로 블로그하자!\n\n- Github 블로그처럼 SGG를 붙여 퍼블리싱하므로 자유도가 있는 탬플릿으로 구현 가능하다.\n\n- 툴에서 쓴 폴더 구조 그대로 블로그를 만들 수 있다. 따로 목록 UI를 구성할 필요가 없다.\n\n- 높은 자유도와 정적인 레이아웃의 적절한 조화 가능\n\n- 개인 노트도 그 툴에서 그대로 하면 된다.(git ignore를 쓰거나 별도의 vault 추가)\n\n- 무료 퍼블리싱 : netlify, Git Pages\n\n---\n\n## 3. 툴 톺아보기\n\n- 깔끔한 에디터 UI\n\n- 실시간 마크다운 프리뷰 지원\n\n- mermaid Embeded\n\n- 커뮤니티 플러그인\n\n    - Cmenu, Advanced Slide, Obsidian Git\n\n- **(!) 개발자 친화적인 데이터 관리**\n\n    - front matter, data view(플러그인)\n\n  \n\n---\n\n## 4. 그래도 단점은 있다 -1\n\n- 공유가 어려움\n\n    - 페이지 공유 : 퀵 퍼블리시 플러그인\n\n    - 페이지 공동 편집 : 불가\n\n- 자유 정렬 지원하지 않음.\n\n    - 오로지 가나다순 알파벳순으로 sorting.\n\n    - 이용자들은 앞에 숫자를 붙여 원하는 대로 정리해야 함.\n\n  \n\n---\n\n## 4. 그래도 단점은 있다 -2\n\n- 유료 플랜 비싸게 나옴.\n\n    - Sync : 월 10달러 <-> 에버노트 월 6천원\n\n    - Publish : 월 20달러 <-> oopy 월 3900원\n\n        - 옵시디언 공식 퍼블리싱 예 : [당근마켓 지식 저장소](https://publish.obsidian.md/karrot/README)\n\n- 개발자 친화적이라 진입장벽 높음  \n\n...  \n\n### 대부분 크리티컬하지 않아! 😤\n\n---\n\n## 5. 더 잘 쓰려면\n\n- 제텔카스텐, 디지털가드닝 기법을 활용한 노트테이킹\n\n- 커뮤니티 더욱 활성화 필요  \n\n![이미지](https://pbs.twimg.com/media/EYrI4OJU8AAZlJw?format=jpg&name=900x900)\n\n  \n\n---\n\n  \n\n> 제 삶은 옵시디언을 쓰기 전과 후로 나뉠 것 같습니다. - 의정부 사는 이 모 씨\n\n  \n\n![](https://mblogthumb-phinf.pstatic.net/MjAyMDAzMzBfMjU0/MDAxNTg1NTc3MTc4NzY3.i9Rkdffs4p_Y1yLYS0yIxgGkQRClUrk4bxN8VANr6oUg.sNbauR1j9CnsJIyGMVTFTxQYEWZkoOKvVW_feHPzC24g.GIF.pikiro/IMG_0416.GIF?type=w800)"},{"excerpt":"미디엄 :  GetX는 Flutter의 앱의 성능과 품질을 저하시켰다 21년 7월 미디엄 글인데 GetX에 대한 네거티브가 트위터에서 논의되고 있다는 것이었다. $card   시발점은 한 개발자의 \"시간을 되돌려 GetX가 만들어지는 걸 막고 싶다\"는 트윗. GetX는 과잉되어 있으며 아키텍쳐가 의심스럽고 오해를 만든다.\n이걸 사용하는 것이 앱의 성능과 …","fields":{"slug":"/220902getxtwitter/"},"frontmatter":{"date":"September 02, 2022","title":"시간을 되돌려 GetX가 만들어지는 걸 막고 싶다","tags":["Diary","Flutter"]},"rawMarkdownBody":"\n[미디엄 :  GetX는 Flutter의 앱의 성능과 품질을 저하시켰다](https://honor-driven.dev/flutter-tweet-1-getx는-flutter의-앱의-성능과-품질을-저하시켰다-6de5335e8cb6)\n\n  \n\n21년 7월 미디엄 글인데 GetX에 대한 네거티브가 트위터에서 논의되고 있다는 것이었다.\n\n  \n[$card](https://twitter.com/creativemaybeno/status/1418148816444923906?ref_src=twsrc%5Etfw) \n\n 시발점은 한 개발자의 \"**시간을 되돌려 GetX가 만들어지는 걸 막고 싶다**\"는 트윗.\n\n>GetX는 과잉되어 있으며 아키텍쳐가 의심스럽고 오해를 만든다.\n>이걸 사용하는 것이 앱의 성능과 품질을 저하시킨다고 확신한다.\n>\n>교훈: 이걸로 모든 것을 하려고 하지 말 것.\n>\n>@creativemaybeno\n\n  \n\n이에 동조하는 많은 리트윗들이 있었다.\n\n내가 마음 한 켠에서 미심쩍어 하던 것들이 트위터 타래에 서술되어 있어서 놀랍고 반가웠다.\n\n  \n\n- 상태관리를 GetX에 의존해야 하는 것에 대한 불안감.\n\n- 그 패키지가 구글(Flutter)에서 관리되고 있지 않는 것에 대한 불신.\n\n- Context를 쥐고 있는 것에 대한 찝찝함.\n\n  \n실제로 성능 저하를 일으키는 모양이다. (사실 나는 GetX를 걷어내도 나이스한 퍼포먼스를 만들지 못해 체감하질 못했다.)\n\n그리고 일정 구간의 버전에서 심각한 버그가 있었던 모양.\n\n\n그럼에도 불구하고 **개발이 용이하니까** 다들 사용하고 있는 모양이다.\n\n역시 쉬운 것이 좋은 것은 아니다.\n\n물론 어려운 것이 좋은 것도 아니지만."},{"excerpt":"Zola 공통 사항 소유권 확인을 위해 DNS 인증이 아닌 html meta tag 인증을 사용. (구매한 도메인이 있다면 DNS 인증도 가능) html meta tag는 /zola/template/base.html의 header에 추가. Zola를 비롯한 대부분의 SSG(Static Site Generator)들은 검색 엔진 콘솔에 제출할 수 있는 형식…","fields":{"slug":"/220819zolaseo/"},"frontmatter":{"date":"August 19, 2022","title":"Zola 블로그 검색 노출 작업 (SEO)","tags":["Zola","Blog"]},"rawMarkdownBody":"## Zola 공통 사항\n\n- 소유권 확인을 위해 DNS 인증이 아닌 html meta tag 인증을 사용. (구매한 도메인이 있다면 DNS 인증도 가능)\n- html meta tag는 `/zola/template/base.html`의 header에 추가.\n- Zola를 비롯한 대부분의 SSG(Static Site Generator)들은 검색 엔진 콘솔에 제출할 수 있는 형식으로 사이트맵을 짜준다. 도메인 뒤에 `/sitemap.xml`만 입력.\n- 탬플릿 수정 후엔 반드시 netlify에서 deploy.\n  \n\n## 구글 검색\n\n- 구글 서치 콘솔 Google Search Console\n\t- https://search.google.com/search-console\n\n- URL 접두어로 인증\n\n![](zola01.png)\n\n- 사이트맵 추가\n\n![](zola02.png)\n\n  \n## 네이버 검색\n\n- 구글 서치 콘솔과 크게 다르지 않습니다.\n\n- 네이버 서치 어드바이저\n\thttps://searchadvisor.naver.com/console/board\n\n- 사이트 등록 및 메타 태그 인증\n\n- 사이트맵 추가\n\n ![](zola03.png)\n\n  \n\n- 웹페이지 최적화\n\n![](zola04.png)\n\n\n- 최적화에서 옵시디언 노트들이 들어 있는 docs를 돌려보고, 없는 태그를 `/zola/template/base.html`에 추가합니다.\n\n  \n---\n\n\n반영하는 데에 며칠이 걸리는 모양.\n현재 블로그 내용 어떤 걸 어떤 식으로 검색해도 어디에도 노출되지 않는데 경과를 지켜보도록 하겠습니다. \n\n+\n일반 키워드로는 내 블로그까지 노출되지 않지만 포스트 타이틀로 검색하니 구글, 네이버에서 검색이 되었습니다. (원래는 타이틀 그대로 검색해도 노출이 안됐음) \n"},{"excerpt":"저장소 액세스 정책 변경 Android 10 이상을 타겟팅하는 기기부터 외부 저장소 루트는 아예 사용할 수가 없고 몇 가지 허용된 공간만 사용 가능합니다. 또, 사용 가능한 외부 저장소에 액세스할 경우에 SAF나 MediaStore를 사용하도록 강제되었습니다.  $card 이 저장소 정책이 적용된지는 한참 됐지만 MediaRecorder에서 약간 헤매게 …","fields":{"slug":"/220818mediarecorder/"},"frontmatter":{"date":"August 18, 2022","title":"[해결] MediaRecorder에서 저장소 정책 변경 적용","tags":["SLtackOverFlow","Android"]},"rawMarkdownBody":"\n## 저장소 액세스 정책 변경\n\nAndroid 10 이상을 타겟팅하는 기기부터 외부 저장소 루트는 아예 사용할 수가 없고 몇 가지 허용된 공간만 사용 가능합니다. 또, 사용 가능한 외부 저장소에 액세스할 경우에 SAF나 MediaStore를 사용하도록 강제되었습니다.  \n [$card](https://developer.android.com/training/data-storage/shared/media?hl=ko)\n\n이 저장소 정책이 적용된지는 한참 됐지만 MediaRecorder에서 약간 헤매게 됐는데 솔루션이 있는 웹페이지가 없길래 정리해 둡니다.\n\n## MediaRecorder\n\n[$card](https://developer.android.com/guide/topics/media/mediarecorder?hl=ko)\n\n시시콜콜한 것들은 도큐먼트에 잘 나와 있습니다.\n\n## 외부저장소에 저장하기\n\n```java\n\n...\nrecorder = new MediaRecorder(); \nrecorder.setAudioSource(MediaRecorder.AudioSource.MIC); \nrecorder.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP); \nrecorder.setOutputFile(fileName);\n\n```\n\n  \n여기서 `setOutputFile()`의 fileName은 저장하고자 하는 파일명의 full path만 사용하면 됐었습니다.\n이 함수는 내부 저장소(data/data/{app_name})에서는 고대로 사용할 수 있습니다.\n하지만 MediaStore로 접근해야 하는 외부 저장소를 사용할 때에는 더이상 String으로된 path로 접근할 수가 없습니다.\n\n그렇다면 outputFile의 Path를 어떻게 지정할 수 있을까?\n\n`setOutputFile()`중에는 FileDescriptor를 파라미터로 갖는 것이 있습니다.\n\n![](mediarecorder.png)\n\n  \n이렇게 FileDescriptor를 얻으면 되겠구나!\n\n```java\n\nFileDescriptor getFileDescriptor(){\n\n    ContentValues values = new ContentValues();\n\n    values.put(MediaStore.Video.Media.DISPLAY_NAME, \"filename.MP4\");\n\n    values.put(MediaStore.Video.Media.MIME_TYPE, \"video/*\");\n\n    ContentResolver resolver = getContentResolver();\n\n    Uri item = contentResolver.insert(MediaStore.Video.Media.EXTERNAL_CONTENT_URI, values);\n\n    ParcelFileDescriptor fileDescriptor = null;\n\n    try {\n\n        fileDescriptor = resolver.openFileDescriptor(item, \"w\");\n\n        return fileDescriptor.getFileDescriptor();\n\n    } catch (FileNotFoundException e) {\n\n        e.printStackTrace();\n\n    }\n\n    return null;\n\n}\n\n```\n\n  \n\n안됩니다.\n\n내부저장소는 full path만 넣으면 파일이 미리 만들어져 있지 않아도 그 위치에 그 파일명으로 write가 되었던 반면, 이렇게 할 때엔 내가 임시 파일을 생성해 두어야 합니다.  \n\n여기서 기존 코드랑 꼬였어서 조금 헤맸습니다.\n\n\n  \n- 정상 예제\n\n```java\n\nFileDescriptor getFileDescriptor() {\n\n    ContentValues values = new ContentValues();\n\n    values.put(MediaStore.Video.Media.DISPLAY_NAME, \"filename.MP4\");\n\n    values.put(MediaStore.Video.Media.MIME_TYPE, \"video/*\");\n\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\n\n        // 해당 파일을 다른 앱에서 접근하는 것을 막는 플래그.\n\n        values.put(MediaStore.Video.Media.IS_PENDING, 1);\n\n    }\n\n    ContentResolver resolver = getContentResolver();\n\n    Uri item = contentResolver.insert(MediaStore.Video.Media.EXTERNAL_CONTENT_URI, values);\n\n    ParcelFileDescriptor fileDescriptor = null;\n\n    try {\n\n        // file write 추가\n\n        fileDescriptor = resolver.openFileDescriptor(item, \"w\");\n\n        if (fileDescriptor != null) {\n\n        // 빈 파일 생성\n\n        String str = \"hello\";\n\n        byte[] strToByte = str.getBytes();\n\n        FileOutputStream fos = new FileOutputStream(fileDescriptor.getFileDescriptor());\n\n        fos.write(strToByte);\n\n        fos.close();\n\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\n\n            values.clear();\n\n            // 해당 파일을 다른 앱에서 접근하는 것을 다시 허용.\n\n            values.put(MediaStore.Images.Media.IS_PENDING, 0);\n\n            contentResolver.update(item, values, null, null);\n\n        }\n\n        return fileDescriptor.getFileDescriptor();\n\n    } catch (FileNotFoundException e) {\n\n        e.printStackTrace();\n\n    }\n\n    return null;\n\n}\n\n```\n\n  \n\n이제 Recording이 정상적으로 되는 것을 확인할 수 있습니다.\n\n서치하다가 못 찾고 궁리해낸 방법이라 제대로 된 솔루션이 따로 있을 수 있습니다.\n\n지적은 언제나 환영.\n"},{"excerpt":"Concept   플리불러는 유튜브 플레이리스트(이하 플리)에 있는 노래들을 노래방 번호로 뽑아냅니다.  검색한 플리를 노래방 정보와 함께 보관할 수 있습니다.   TODO  유저들의 인기 검색 플리 등을 수집하여 노래방 기기와는 별도의 인기순위를 제공합니다.       why 어느날 일하면서 듣는 플리에 흥이 차서 퇴근길에 노래방에 갔습니다. 듣고 있던…","fields":{"slug":"/220811plibula/"},"frontmatter":{"date":"August 11, 2022","title":"🎤플레이리스트를 노래방 번호로 바꿔주는 앱, 플리불러","tags":["Toy-Project","Kotlin"]},"rawMarkdownBody":"\n[$card](https://play.google.com/store/apps/details?id=com.sleepybee.singpli)\n\n## Concept\n\n-   **플리불러**는 유튜브 플레이리스트(이하 플리)에 있는 노래들을 노래방 번호로 뽑아냅니다.\n\n-  검색한 플리를 노래방 정보와 함께 보관할 수 있습니다.\n\n-   [TODO]  유저들의 인기 검색 플리 등을 수집하여 노래방 기기와는 별도의 인기순위를 제공합니다.      \n\n  \n\n## why\n\n- 어느날 일하면서 듣는 플리에 흥이 차서 퇴근길에 노래방에 갔습니다. 듣고 있던 플리에 나오는 곡들을 하나하나 검색하면서 노래하는 게 참 번거로웠습니다.\n\n-   특히 J-POP을 자주 들어서, 플리에 있는 일본곡들을 일일이 복붙해서 검색해봐야 했습니다.\n\n-   애초에 노래방 소프트웨어에서 비슷한 곡을 추천한다거나 일어입력기가 있었다면 좋았겠지만, 30년째 발전하지 않는 노래방 기기.\n\n-   ~~오타쿠는 더이상 참을 수 없었다.~~\n\n  \n\n## Simple Scenario\n-   검색 페이지에서 유튜브 플리 검색 > 플리의 음악 수집 > 노래방 정보로 추출하여 리스팅  \n\n  \n\n## How To\n-   유튜브 플리에는 사용된 음악 메타를 표출하는 컴포넌트가 있습니다.\n\n![유튜브 음악 메타](pleebula_youtube.png)\n\n- 여기서 내용을 긁어 추출한 음악들을 네이버 노래방 검색으로 번호를 찾게 하였습니다.\n\n-   (태진이나 금영의 공식 홈페이지 검색을 사용할 수도 있었으나 공홈의 상태가 매우 나빴습니다. 공식적으로 API를 받을 수 없을까 메일 문의를 했는데 제공할 수 없다는 답변을 받았습니다.)  \n  \n\n## Remarkable\n\n-   상술했듯이 오타쿠라 일본곡 검색에 신경을 썼습니다.\n\n-   유튜브의 음악 제목과 노래방의 음악 제목은 간극이 있습니다. 영문으로만 표기하는 경우가 많습니다.\n\n> [예시]\n> - 유튜브 :  ZUTOMAYO - Byoushinwo Kamu\n> - 노래방 : 宿題を噛む / ずっと真夜中でいいのに。\n\n  \n- 네이버 노래방 검색은 대히트곡인 `Kenshi Yonezu - Lemon` 조차 이해하지 못해서  팝가수인줄 알고 `lemon tree`(!)를 내뿜었습니다.\n\n-   이런 식의 일본곡들은 웹에서 한자를 긁어와서 재검색하고 `米津 玄師 - Lemon`이 나오게끔 처리했습니다.\n\n-   코드 상에서 국적 등이 구분이 어려운 친구들은 검색어 치환 키트를 서버에 저장해서 치환해주고 있습니다.\n\n  \n\n>  BOL4 -> 볼빨간사춘기\n\n  \n\n## Limitation\n\n-   플레이리스트에 50곡이 있든 100곡이 있든 딱 <u>**상위 10개곡**</u>만 추출할 수 있습니다. 이는 유튜브가 메타를 상위 10곡만 제공하기 때문인데요. 이 메타도 최근에 생긴 거라 추후 전곡 노출로 변경될 수도 있습니다.\n\n-   반대로 유튜브가 메타를 제공하지 않게 되면 앱이 기능하지 않게 됩니다. *유튜브의 음악 메타 노출 정책에 100% 기대고 있습니다.*\n\n-  노래방 검색 성능이 안  좋아서 못 찾는 경우도 있습니다. 치환 키트로 방법을 모색했으나 실패했습니다.\n\n> `레드 벨벳 - Feel my rhythm`은 노래방 DB 그대로 써서 검색해도 번호가 36페이지에 나오는데 36페이지까지 뒤지는 방법이 있긴 하지만 성능을 위해 그냥 포기.\n> ![네이버 노래방 검색 - 제목을 검색해도 36페이지까지 가야 확인된다.](pleebula_redvelvet.png)\n\n## Dev Story \n\n-   `Kotlin`, `AAC`, `MVVM`, `JSoup`, `Firebase`, `Retrofit`, `Youtube data v3`\n\n- 최초 소스만 공개합니다. (유지보수 하다가 API key 등이 실수로 노출될까봐)\n\n- Github : https://github.com/sleepybee-dev/SingPli\n\n- 무식하게 긁어와서 구조가 한눈에 보이기 때문에 유튜브 음악 메타를 쓰려는 사람은 매우 참고가 될 것입니다.\n\n-   `JSoup`은 랜더링되기 전 소스코드를 긁어오는데 이때 유튜브 음악 메타가 엄청나게 긴 json값에 있어서 정규식으로 뽑아냈습니다. 네이버 검색은 DOM을 그대로 쓸 수 있었습니다.\n\n## Release\n\n 최초 배포 - 2022.08.11"},{"excerpt":"이 글을 따라오면 메모-포스팅-발행까지 옵시디언 원툴로 가능해집니다.\n심지어 무료.(22년 8월 현재) Github 블로그를 만들어 본 적이 있다면 Github 블로그를 obsidian 구조로 제작한다고 생각하면 편합니다. 본 가이드에서는 내가 쓰고 있는 obsidian-zola 탬플릿을 사용할 것입니다. 몇 가지 검토해봤는데 옵시디언 데스크탑 앱이나 공…","fields":{"slug":"/220807obsidianblog/"},"frontmatter":{"date":"August 07, 2022","title":"옵시디언 블로그 만들기","tags":["Obsidian","Blog"]},"rawMarkdownBody":"\n\n이 글을 따라오면 메모-포스팅-발행까지 옵시디언 원툴로 가능해집니다.\n심지어 무료.(22년 8월 현재)\n\nGithub 블로그를 만들어 본 적이 있다면 Github 블로그를 obsidian 구조로 제작한다고 생각하면 편합니다.\n\n본 가이드에서는 내가 쓰고 있는 [obsidian-zola](https://github.com/ppeetteerrs/obsidian-zola) 탬플릿을 사용할 것입니다. 몇 가지 검토해봤는데 옵시디언 데스크탑 앱이나 공식 퍼플리싱과 레이아웃이 비슷하고 Github에 있는 소스도 이해하기 편해서 선택했습니다.\n\n> 다른 SGG도 사용가능하지만 obsidian의 데이터 구조를 그대로 활용할 수 있게끔 나온 탬플릿인 것이 좋습니다. 또한 마크다운 기본 문법이 아닌 **아웃링크 \\[\\[\\]\\]가 링크화되게끔 처리되어 있어야** 옵시디언을 백분 활용할 수 있습니다.\n\n> **netlify**는 SGG별로 build option을 다르게 주면 통합 처리된다고 하니 다른 SGG를 사용한다면 [여기](https://docs.netlify.com/integrations/frameworks/?_ga=2.155139773.421626894.1662357885-538442470.1660614030) 참고.\n\n## 0. 결과물 데모\n\n🔗 https://peteryuen.netlify.app\n        \n물론 나의 이 블로그도 결과물이다. (그런데, 탬플릿 수정이 약간 있는)  \n나의 탬플릿을 활용하고 싶다면 [여기](https://github.com/sleepybee-dev/obsidian-zola-bee)에서 fork 후 READ.ME를 읽고 개인화할 필요가 있다.\n\n>**Warning**\n>\\[2024.07.17. 수정\\] 현재 제 블로그는 Hoodie님의 테마가 마음에 들어 Zola가 아닌 Gatsby로 넘어왔습니다.\n  \n\n## 1. 준비물\n\nGit과 Github에 대한 지식이 필요합니다.\nGit과 Github이 뭔지 어떻게 쓰는지에 대한 얘기는 다루지 않습니다.\n\n## 2. Github Repository 생성\n\n경험상 블로그로 활용할 vault에 Git을 붙이는 것보다 레파지토리를 Checkout에서 vault로 삼는 게 이해하기 편합니다.\n전 [sleepybee-dev-log](https://github.com/sleepybee-dev/sleepybee-dev-log)라는 이름으로 레파지토리를 생성했습니다.\n아직 Checkout 하지 않습니다.\n\n## 3. Repository에 netlify.toml 파일 만들기\n\n`netlify.toml`는 메타 파일이지만 사실 진입 페이지 UI파일이나 다름없기 때문에 vault에 넣어서 같이 관리해줄 필요가 있는 파일입니다. 그래서 Checkout 전에 만들어 줍니다.\n\n(1) 레파지토리에서 `Add File` - `Create New File` - 파일명 `netlify.toml`\n\n(2) obsidian-zola에서 [sample파일](https://github.com/ppeetteerrs/obsidian-zola/blob/main/netlify.example.toml) 내용 복붙\n\n(3) 내 사이트에 맞게 값 수정\n\n    - (필수) **REPO_URL = 내 레파지토리 url**\n\n    - TIMEZONE = \"Asia/Seoul\"\n\n    - 그밖에 원하는 값 자유롭게 변경\n\n## 4. netlify Site 생성\n\nnetlify는 무료 퍼플리싱 플랫폼입니다.\ngithub 레파지토리를 연동해서 배포해주는 시스템이 잘 돼있습니다.\n무엇보다 무료.\n\n(1) [netlify](https://www.netlify.com) 가입 & 로그인\n\n(2) `Add new site` - `Import an existing project` - `Github` 클릭 후 내 레파지토리 선택\n\n\n### 4-1. 최초 배포 (netlify deploy)\n\n이 순서대로 했다면 필요없지만 혹시 다른 순서로 작업했다면 최초 배포를 수동으로 해야하는 경우가 있습니다.\n\nnetlify.toml이 작성된 후 netlify에서 이 메타 파일을 한 번은 읽어주기 위함입니다.\n\nnetlify에서 만든 site를 누르면 탭 중에 `Deploys`가 있을 것입니다.\n\n우측 중단에 `Trigger deploy - Deploy site`\n\n![](blogguide4.png)\n\n## 5. Repository Checkout\n\n이제 Checkout합시다.\n\n주의할 점은 다른 PC, 모바일과 동기화를 하려면 iCloud, OneDrive, 구글 드라이브 등 내장되어있는 클라우드 위치에 넣어야 한다는 것입니다. obsidian에서 공식 지원하는 건 iCloud 뿐이나 로컬 파일로 관리되므로 어떤 클라우드를 사용해도 무방합니다.(몇 가지 이슈가 있기는 한 모양)\n\n제 경우 iCloud를 씁니다.\n\n옵시디언을 설치하면 기본적으로 있는 Obsidian 폴더 안에 레파지토리를 Checkout했습니다.\n  \n\n![](blogguide2.png)\n\n\n## 6. Obsidian vault로 열기\n\n`'폴더를 보관함으로 열기'`를 눌러 방금 checkout한 폴더(sleepybee-dev-log)를 선택합니다.\n\n![](blogguide3.png)\n\n  \n## 7. 글 쓰고 Push\n\n자, 이제 자유롭게 써봅시다.\n\n**당신이 만든 폴더 구조가 곧 블로그의 메뉴 구조가 될 것입니다.**\n\n이미지를 붙여넣으면 `content` 폴더가 생성 될텐데 [obsidian-zola](https://github.com/ppeetteerrs/obsidian-zola)에서 `content`폴더는 자동으로 invisible해주니 블로그 메뉴엔 보이지 않습니다.\n\n글 쓴 후 Git push만 하면 netlify가 레파지토리를 보고 있다가 push에 맞춰 자동으로 사이트를 배포해줍니다. (반영까지 10초 정도 소요되는 것 같습니다.)\n  \n\n## 8. Obsidian-git 플러그인 사용하기 (Optional)\n\ngit command 가 능수능란하다면 필요없겠지만 전 obsidian에서 모든 걸 해결하고 싶기 때문에 git 플러그인도 설치했습니다.\n\n- obsidian 설정 - 서드파티 플러그인 - 커뮤니티 플러그인 - Obsidian Git 설치 후 Enable\n\n우측에 Source Control이라는 탭이 생겼을 겁니다.\n\n\n![](blogguide5.png)\n\n`Source Control` 탭에서 `Changes`를 `+`로 스테이지에 올리고 `v` 버튼으로 커밋, 4번째 버튼으로 푸시.\n\n첨부한 이미지 파일 등도 누락되지 않게 Commit, Push 해주어야 합니다.\n\n  \n\n## 9. 개인 메모는 어떻게?\n\n두 가지 방법이 있고 전 둘 다 쓰고 있습니다.\n\n1. git에 올리지만 않으면 블로그에 올라가지 않기 때문에 git ignore를 이용한다.\n\n2. 개인 노트용 vault를 따로 둔다.\n\n  \n\n블로그용으로 수집된 개발 지식 관련 메모들은 1번을 이용하고 정말 개인적인 건 2번을 쓰고 있습니다.\n\n\n\n## 개인 메모와 블로깅을 옵시디언 하나만 켜서 끝낸다.\n\n\n옵시디언의 노트 기능이 나이스한 건 말할 것도 없고 위 작업으로 인해 블로그 역시,\n\n1. 글 쓰기\n\n2. Source Control 에서 Commit & Push\n\n\n딱 이 동작만으로 발행합니다.\n폴더 구조를 바꾼다고 블로그의 메뉴 구성을 따로 손 볼 필요도 없습니다.\n\n**이 모든 것이 무료이며, 탁월하다.**\n\n노션으로 원툴 블로그하겠다고 애쓰던 나에게 RIP.\n여러분도 옵시디언하시고 새 삶을 찾기를 바랍니다."},{"excerpt":"diamond_dial_fab  diamond_dial_fab는 Flutter UI 오픈소스 라이브러리입니다. 다이아몬드 형태의 플로팅 버튼에 라운딩을 주고 Child Button을 갖는 것이 주요 기능입니다. 전반적인 기능은 아래. 다이아몬드 플로팅 버튼 생성 다이아몬드에 라운드값을 설정   dim 오버레이의 모드를 light, dark로 설정   Ch…","fields":{"slug":"/220327diamonddialfab/"},"frontmatter":{"date":"March 27, 2022","title":"💠다이아몬드 다이얼 FAB 라이브러리","tags":["Toy-Project","Flutter"]},"rawMarkdownBody":"  \n\n## diamond\\_dial\\_fab\n\n[$card](https://pub.dev/packages/diamond_dial_fab)\n\n<img src = \"https://sleepybee-dev.netlify.app/docs/content/demo.gif\" width=300/>\n\n\n**diamond\\_dial\\_fab**는 Flutter UI 오픈소스 라이브러리입니다. 다이아몬드 형태의 플로팅 버튼에 라운딩을 주고 Child Button을 갖는 것이 주요 기능입니다. 전반적인 기능은 아래.\n\n>1. 다이아몬드 플로팅 버튼 생성\n>2. 다이아몬드에 라운드값을 설정  \n>3. dim 오버레이의 모드를 light, dark로 설정  \n>4. Child FAB의 텍스트 입력 및 방향 설정  \n\n기타 자세한 Config는 [pub.dev](https://pub.dev/packages/diamond_dial_fab)에서 확인할 수 있습니다.\n\n## quadraticBezierTo\n\n이 과정에서 quadraticBezierTo라는 기하 함수를 활용했습니다.\nquadraticBezierTo는 베지에 곡선을 그리는 함수이며 꼭지각을 라운딩하는 데에 주로 쓰이는 함수입니다.\n원하는 대로 그리는 데에 시행착오가 있었어서 다른 사람들은 시행착오가 없길 바라며 따로 포스팅하려고 합니다.\n\n## Comment\n\n별 건 아니지만 <a href=\"/201006ptube/\">피튜브Ptube</a>에서 써야 되는데 공개된 소스가 없길래 만들어 배포했습니다.\n플러그인 처음 배포해 봤는데 한동안 누가 안 써주나 계속 pub.dev에 들어가서 확인했더랍니다. 그리고 지금껏 아무도 안 써줘서 좀 서운하네요.\n애니메이션 등 기능을 조금 더 붙여 인기를 얻어볼 생각입니다.\n\n\n## Release\n\n 최초 배포 - 2022.03.27\n"},{"excerpt":"$card Concept   픽셀프Picshelf는 아주 심플한 사진 위젯 앱입니다. 간단하게 프레임을 씌우거나 사진 이름을 노출할 수 있습니다. 앱 이름은 책장을 뜻하는 Bookshelf에서 따와서 사진장이라는 뉘앙스로 지었습니다. why 실은 홈 화면에 예쁘게 사진을 전시하는 게 목적이 아니었습니다. 선물받은 기프티콘 맨날 안 쓰고 유통기한이 지나는 …","fields":{"slug":"/201202picshelf/"},"frontmatter":{"date":"December 02, 2020","title":"🖼️사진 위젯 앱, 픽셀프Picshelf","tags":["Toy-Project","Kotlin","MVVM"]},"rawMarkdownBody":"  \n[$card](https://play.google.com/store/apps/details?id=com.gmail.sleepybee410.picshelf)\n \n## Concept\n\n-   **픽셀프Picshelf**는 아주 심플한 사진 위젯 앱입니다.\n\n- 간단하게 프레임을 씌우거나 사진 이름을 노출할 수 있습니다.\n\n- 앱 이름은 책장을 뜻하는 Bookshelf에서 따와서 사진장이라는 뉘앙스로 지었습니다.\n\n## why\n\n-  실은 홈 화면에 예쁘게 사진을 전시하는 게 목적이 아니었습니다. 선물받은 기프티콘 맨날 안 쓰고 유통기한이 지나는 것에서 불편함을 느껴 이미지로 받은 기프티콘을 홈 화면에 띄워놓고 바로 바코드를 찍게 하고 싶었습니다.\n- 대부분의 사진 위젯 앱들이 장식에 치우쳐져 있어서 불필요한 기능이 없는 단순한 위젯을 만들고자 했습니다.\n  \n## Simple Scenario\n\n- 스마트폰 바탕화면 롱클릭하여 위젯 추가 > 픽셀프 선택 > 사진 선택 후 재배치 및 크기 조절  \n\n## Remarkable\n\n- 앱 소개 스크린샷에서는 동생들과 찍은 다정한 사진이 있지만, 실제로는 기프티콘 생기면 바탕화면에 노출하는 용도로만 잘 쓰고 있습니다.\n\n## Dev Story\n\n- `Kotlin`, `MVVM`, `AAC`, `AppWidgetManager`\n\n- Home Screen Widget을 다루는 개발을 안 해봐서 경험 삼아서 만들어 봤습니다.\n\n- GitHub : https://github.com/sleepybee-dev/picshelf\n\n\n## Release\n\n 최초 배포 - 2020.12.02\n\n  "},{"excerpt":"Concept 피튜브PTube는 유튜브 링크를 게시하는 프라이빗 그룹 앱입니다. 초대코드로만 들어올 수 있는 그룹(채널) 안에서 유튜브 링크들을 게시해 함께 리스트를 공유할 수 있습니다다. 유튜브는 업로드된 영상을 '링크 공개' 상태로 할 수 있는데 그러한 영상들을 모아 보기에 유용합니다. why 저는 여행을 가면 꼭 영상을 찍고 편집하는데 대용량이라 유…","fields":{"slug":"/201006ptube/"},"frontmatter":{"date":"October 06, 2020","title":"📼비공개 유튜브 채널 앱, 피튜브Ptube","tags":["Toy-Project","Flutter"]},"rawMarkdownBody":"[$card](https://play.google.com/store/apps/details?id=com.gmail.sleepybee410.ptube)\n\n## Concept\n\n- **피튜브PTube**는 유튜브 링크를 게시하는 프라이빗 그룹 앱입니다.\n\n- 초대코드로만 들어올 수 있는 그룹(채널) 안에서 유튜브 링크들을 게시해 함께 리스트를 공유할 수 있습니다다.\n\n- 유튜브는 업로드된 영상을 '링크 공개' 상태로 할 수 있는데 그러한 영상들을 모아 보기에 유용합니다.\n\n## why\n\n- 저는 여행을 가면 꼭 영상을 찍고 편집하는데 대용량이라 유튜브에 올려서 같이 간 친구들에게 공유합니다. 다른 사람들이 보는 걸 원하지 않기 때문에 '링크 공개'로 해두는데 이러면 내 채널에 와도 영상을 볼 수 없으며 그 친구들이 훗날 다시 영상을 보고 싶으면 내가 다시 링크를 따서 공유해야 하는 번거로움이 있었습니다.\n\n- 때문에 '비공개 채널'의 개념을 만들어 '링크 자체'를 데이터로 가지고 있는 그룹을 만들면 어떨까 해서 만들었습니다.\n\n- 실제로 친구들을 초대한 비공개 채널에 여행 영상들을 올리면서 잘 활용하고 있습니다.\n\n## Simple Scenario\n\n- 프라이빗 채널 개설 (또는 초대코드 입력) -> 동영상 업로드 -> 게시된 동영상을 누르면 유튜브로 연결  \n\n## Dev Story\n\n- `Flutter`, `Youtube data API`, `Firebase`\n\n- Flutter로 처음 만든 앱이라 아키텍쳐가 없습니다. 여유가 될 때 적용해 볼 예정.\n\n- 디자이너 지망생 친구가 연습 삼아 디자인을 붙여줬습니다. 협업은 XD를 활용했습니다.\n\n- 이때 디자인해준 다이아몬드 모양의 FAB Dial이 Flutter에 마땅한 라이브러리가 없어서 UI 라이브러리까지 만들어서 반영했습니다. <a href=\"/220327diamonddialfab/\">diamond_dial_fab (Library)</a>\n\n## Release\n\n 최초 배포 - 2020.10.06"}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}